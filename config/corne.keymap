/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LOWER 1
#define RAISE 2
#define TEST 3

/ {
    macros {
        alt_space: alt_space {
            label = "ZM_alt_space";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LALT>;
        };
        screenshot: screenshot {
            compatible = "zmk,behavior-macro";
            label = "SCREENSHOT";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp S>,
                <&macro_release>,
                <&kp LEFT_SHIFT>,
                <&macro_release>,
                <&kp LGUI>;
        };
        somestring: somestring {
            compatible = "zmk,behavior-macro";
            label = "SOMESTRING";
            #binding-cells = <0>;
            bindings = <&kp M &kp O &kp U &kp S &kp E &kp SPACE &kp C &kp A &kp L &kp C &kp U &kp L &kp A &kp T &kp O &kp R &kp SPACE &kp T &kp O &kp W &kp E &kp L &kp SPACE &kp B &kp A &kp S &kp E &kp SPACE &kp T &kp R &kp A &kp S &kp H &kp C &kp A &kp N &kp SPACE &kp C &kp O &kp R &kp A &kp L &kp SPACE &kp E &kp Y &kp E &kp S &kp SPACE &kp C &kp A &kp B &kp L &kp E &kp SPACE &kp E &kp X &kp P &kp L &kp O &kp S &kp I &kp O &kp N &kp SPACE &kp F &kp O &kp L &kp D &kp E &kp D &kp SPACE &kp T &kp H &kp I &kp N &kp K &kp SPACE &kp P &kp L &kp A &kp S &kp T &kp I &kp C &kp SPACE &kp S &kp C &kp A &kp N &kp SPACE &kp O &kp C &kp T &kp A &kp G &kp O &kp N>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | SPC | LWR | LGUI|   | RSE | SPC  | ENT |

            bindings = <
  &kp TAB  &kp Q  &kp W      &kp E  &kp R  &kp T       &kp Y      &kp U      &kp I    &kp O     &kp P         &kp BSPC
&kp LCTRL  &kp A  &kp S      &kp D  &kp F  &kp G       &kp H      &kp J      &kp K    &kp L  &kp SEMI          &kp SQT
&kp LSHFT  &kp Z  &kp X      &kp C  &kp V  &kp B       &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                         &kp SPACE  &mo 2  &mo 1    &mo TEST  &kp SPACE    &kp RET
            >;

            label = "DEFAULT";
        };

        game_layer {
            // -----------------------------------------------------------------------------------------
            // |  `   |  1  |  UP |  2  |  3  |  4  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | TAB  | LFT | DWN | RGT |  5  |  6  |   | LFT | DWN |  UP | RGT |     |      |
            // |      |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | LGUI|     | ALSP|   | ENT |     | ALT |

            bindings = <
  &kp ESCAPE       &kp N1    &kp N2      &kp UP     &kp N3  &kp N4    &bootloader      &none         &kp UP      &none    &bt BT_PRV  &bt BT_NXT
&kp CAPSLOCK  &screenshot  &kp LEFT    &kp DOWN  &kp RIGHT  &kp N6     &sys_reset   &kp LEFT       &kp DOWN  &kp RIGHT  &bt BT_SEL 1  &bt BT_CLR
      &kp F1       &kp F2    &kp F3      &kp F4     &kp F5  &kp F6         &kp F7     &kp F8         &kp F9    &kp F10       &kp F11     &kp F12
                                     &alt_space  &kp SPACE   &none          &to 1  &kp SPACE  &kp RIGHT_ALT
            >;

            label = "GAMING";
        };

        functional_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp GRAVE  &kp EXCLAMATION    &kp AT_SIGN      &kp POUND            &kp DOLLAR            &kp PERCENT           &kp MINUS             &kp EQUAL      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH  &kp DEL
  &kp TILDE        &kp CARET  &kp AMPERSAND   &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS      &kp UNDERSCORE              &kp PLUS        &kp LEFT_BRACE    &kp RIGHT_BRACE       &kp PIPE  &kp END
&bootloader         &kp HOME     &kp INSERT  &kp PAGE_DOWN             &kp PG_UP        &kp PRINTSCREEN    &kp C_PLAY_PAUSE  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC    &kp PAUSE_BREAK          &none    &none
                                               &somestring                 &none               &kp LGUI         &kp C_SLEEP     &kp C_VOLUME_DOWN       &kp C_VOLUME_UP
            >;

            label = "FUNCTION";
        };

        numpad_layer {
            bindings = <
&none      &kp KP_PLUS  &kp N7     &kp N8  &kp N9        &kp CARET    &none     &none          &kp UP      &none  &none  &trans
&none        &kp ENTER  &kp N4     &kp N5  &kp N6  &kp KP_ASTERISK    &none  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT  &none   &none
&none  &kp KP_SUBTRACT  &kp N1     &kp N2  &kp N3    &kp KP_DIVIDE    &none     &none           &none      &none  &none   &none
                                &kp COMMA  &kp N0       &kp PERIOD    &none     &none        &kp RALT
            >;

            label = "NUMPAD";
        };
    };
};
